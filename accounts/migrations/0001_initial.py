# Generated by Django 4.2.7 on 2025-05-27 09:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате: "+999999999". До 15 цифр.', regex='^\\+?1?\\d{9,15}$')], verbose_name='Телефон')),
                ('user_type', models.CharField(choices=[('applicant', 'Заявитель'), ('moderator', 'Модератор'), ('admin', 'Администратор')], default='applicant', max_length=20, verbose_name='Тип пользователя')),
                ('middle_name', models.CharField(blank=True, max_length=150, verbose_name='Отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Аватар')),
                ('organization', models.CharField(blank=True, max_length=255, verbose_name='Организация')),
                ('position', models.CharField(blank=True, max_length=100, verbose_name='Должность')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Страна')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Город')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('preferred_language', models.CharField(choices=[('kk', 'Қазақша'), ('ru', 'Русский'), ('en', 'English')], default='kk', max_length=2, verbose_name='Предпочитаемый язык')),
                ('receive_notifications', models.BooleanField(default=True, verbose_name='Получать уведомления')),
                ('receive_newsletter', models.BooleanField(default=False, verbose_name='Получать рассылку')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email подтвержден')),
                ('phone_verified', models.BooleanField(default=False, verbose_name='Телефон подтвержден')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP последнего входа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iin', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='ИИН')),
                ('passport_number', models.CharField(blank=True, max_length=20, verbose_name='Номер паспорта')),
                ('nationality', models.CharField(blank=True, max_length=50, verbose_name='Национальность')),
                ('education_level', models.CharField(blank=True, choices=[('secondary', 'Среднее'), ('higher', 'Высшее'), ('postgraduate', 'Послевузовское')], max_length=50, verbose_name='Уровень образования')),
                ('university', models.CharField(blank=True, max_length=255, verbose_name='Университет')),
                ('graduation_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год окончания')),
                ('applications_count', models.PositiveIntegerField(default=0, verbose_name='Количество заявок')),
                ('last_activity', models.DateTimeField(auto_now=True, verbose_name='Последняя активность')),
                ('profile_visibility', models.CharField(choices=[('public', 'Публичный'), ('private', 'Приватный')], default='private', max_length=20, verbose_name='Видимость профиля')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создано')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль пользователя',
                'verbose_name_plural': 'Профили пользователей',
            },
        ),
    ]
